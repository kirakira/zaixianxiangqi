syntax = "proto3";

package blur_bench;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/kirakira/zaixianxiangqi/internal/blur_bench";

message EngineInfo {
  string name = 1;
}

message ExperimentMetadata {
  int64 id = 1;
  google.protobuf.Timestamp creation_time = 2;
  EngineInfo control = 3;
  EngineInfo treatment = 4;
}

enum GameResult {
  UNKNOWN_GAME_RESULT = 0;
  RED_WON = 1;
  BLACK_WON = 2;
  DRAW = 3;
}

enum GameResultReason {
  UNKNOWN_GAME_RESULT_REASON = 0;
  MATE = 1;
  RESIGN = 2;
  RULE_PERPETUAL_ATTACK = 3;
  RULE_REPETITION = 4;
  LACK_OF_PROGRESS = 5;
}

message EngineThinkingOutputLine {
  int32 depth = 1;
  bool depth_complete = 2;
  double score = 3;
  double time_centi_seconds = 4;
  int64 nodes = 5;
  repeated string pv = 6;
}

message EngineThinkingOutput {
  // Output line for the last complete depth.
  EngineThinkingOutputLine last_complete_depth = 1;
}


message GameRecord {
  // A unique ID that identifies a game in the experiment.
  string game_id = 1;
  // True if control is red; false if control is black.
  bool control_is_red = 2;
  google.protobuf.Timestamp start_time = 3;

  // The moves in Xboard notation.
  repeated string moves = 4;
  // The scores (relative to red) given by each engine. Corresponds 1-1 to the
  // moves.
  repeated double scores = 5 [packed=true];
  // Engine debug output for each move.
  repeated EngineThinkingOutput output = 8;

  GameResult result = 6;
  GameResultReason result_reason = 7;
}
